/**
 *  Copyright 2005-2016 Red Hat, Inc.
 *
 *  Red Hat licenses this file to you under the Apache License, version
 *  2.0 (the "License"); you may not use this file except in compliance
 *  with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
 *  implied.  See the License for the specific language governing
 *  permissions and limitations under the License.
 */
package io.fabric8.profiles.containers;

import java.io.IOException;
import java.nio.file.Path;
import java.util.Properties;

import com.fasterxml.jackson.databind.JsonNode;
import io.fabric8.profiles.config.ConfigHelper;

/**
 * Processes a reified project generated by a {@link ProjectReifier}.
 * This may include things like pushing changes to a remote repo, updating OpenShift artifacts, etc.
 */
public abstract class ProjectProcessor {

    protected final JsonNode defaultConfig;

    /**
     * Initialize a processor with default configuration.
     * @param config    default configuration properties.
     */
    public ProjectProcessor(JsonNode config) {
        this.defaultConfig = ConfigHelper.copyObjectNode(config);
    }

    /**
     * Handle container deletion.
     */
    public abstract void processDelete(String name, Properties lastConfig) throws IOException;

    /**
     * Process a reified container.
     * @param name            Processor name.
     * @param config          Processor configuration.
     * @param containerDir    Reified container directory.
     * @throws IOException on error.
     */
    public abstract void process(String name, JsonNode config, Path containerDir) throws IOException;

}
